// src/pages/Home/index.jsx
import { useState } from "react";
import {
    Input,
    Button,
    Dropdown,
    Carousel,
    Tag,
} from "antd";
import {
    SearchOutlined,
    FilterOutlined,
    HomeOutlined,
    ApartmentOutlined,
    EnvironmentOutlined,
    BankOutlined,
} from "@ant-design/icons";
import FeatureTools from "../../components/button/FeatureTools";
import FeaturedList from "../../components/cards/FeaturedList";
import FeaturedProjects from "../../components/sections/FeaturedProjects";
import FirstTimeBuyerGuide from "../../components/sections/FirstTimeBuyerGuide";
import BannerCta from "../../components/sections/BannerCta";
import bannerPlanning from "../../assets/home-section4-image-bg.png";
import bannerResearch from "../../assets/home-section6-image-bg.png";
import bannerPosting from "../../assets/home-section7-image-bg.png";
import bannerContact from "../../assets/home-section8-image-bg.png";
import FilterModal from "../../components/filters/FilterModal";

const trending = [
    "mua nh√† ph·ªë b√¨nh t√¢n d∆∞·ªõi 7 t·ª∑",
    "b√°n nh√† t√¢n ph√∫",
    "nh√† t√¢n b√¨nh 3-7 t·ª∑",
    "nh√† ƒë·∫•t b√¨nh th·∫°nh",
    "nh√† h·∫ªm ƒë·∫πp g√≤ v·∫•p",
    "b√°n cƒÉn h·ªô qu·∫≠n 7",
    "b√°n nh√† ƒë·∫•t qu·∫≠n 8",
];

export default function Home() {
    const [mode, setMode] = useState("buy"); // 'buy' | 'rent'
    const [query, setQuery] = useState("");
    const [type, setType] = useState(null);
    const [showFilter, setShowFilter] = useState(false);
    const [filters, setFilters] = useState(null);

    const handleApplyFilters = (payload) => {
        setFilters(payload);
        // TODO: g·ªçi API v·ªõi filters
        // console.log("Applied filters:", payload);
    };

    const handleSearch = () => {
        // TODO: n·ªëi API t√¨m ki·∫øm
        console.log({ mode, type, query });
    };

    const typeMenu = {
        items: [
            { key: "can-ho", label: "CƒÉn h·ªô", icon: <ApartmentOutlined /> },
            { key: "nha-pho", label: "Nh√† ph·ªë", icon: <HomeOutlined /> },
            { key: "biet-thu", label: "Bi·ªát th·ª±", icon: <BankOutlined /> },
            { key: "dat-nen", label: "ƒê·∫•t n·ªÅn", icon: <EnvironmentOutlined /> },
        ],
        onClick: ({ key }) => setType(key),
    };

    return (
        <div className="w-full">
            {/* ================= HERO (n·ªÅn xanh) ================= */}
            <section className="relative w-full bg-gradient-to-br from-[#1b2a57] via-[#23356c] to-[#2b5aa6] text-white">
                <div className="max-w-[1200px] mx-auto px-4 md:px-6 lg:px-8 pt-10 lg:pt-16 pb-24">
                    <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 items-center">
                        {/* Left: Heading + Desc */}
                        <div>
                            <h1 className="text-[36px] leading-[1.15] font-extrabold sm:text-[44px] lg:text-[56px]">
                                T√¨m nh√† th√¥ng th√°i
                                <br />Tho·∫£i m√°i an c∆∞
                            </h1>
                            <p className="mt-4 text-white/85 text-[15px] lg:text-[17px] max-w-[560px]">
                                N·ªÅn t·∫£ng b·∫•t ƒë·ªông s·∫£n ƒë·∫ßu ti√™n t·ªëi ∆∞u tr·∫£i nghi·ªám t√¨m b·∫•t ƒë·ªông s·∫£n theo
                                ti√™u ch√≠ n√¢ng cao. H√†ng ng√†n b·∫•t ƒë·ªông s·∫£n ph√π h·ª£p <span className="font-semibold">d√†nh ri√™ng cho b·∫°n</span>. B·∫Øt ƒë·∫ßu t√¨m ki·∫øm ngay!
                            </p>
                        </div>

                        {/* Right: Banner / Carousel */}
                        <div className="w-full">
                            <div className="bg-white/5 rounded-2xl overflow-hidden shadow-xl">
                                <Carousel autoplay dots className="h-[220px] sm:h-[260px] lg:h-[300px]">
                                    {[1, 2, 3].map((i) => (
                                        <div key={i} className="h-full">
                                            <img
                                                className="w-full h-[220px] sm:h-[260px] lg:h-[300px] object-cover"
                                                src="https://images.unsplash.com/photo-1560518883-ce09059eeffa?q=80&w=1600&auto=format&fit=crop"
                                                alt={`banner-${i}`}
                                            />
                                        </div>
                                    ))}
                                </Carousel>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            {/* ================= SEARCH (tr√†n xu·ªëng n·ªÅn tr·∫Øng) ================= */}
            <section className="-mt-12 lg:-mt-16 relative z-20">
                <div className="max-w-[1440px] mx-auto px-4 md:px-6 lg:px-8">
                    <div className="bg-white/95 backdrop-blur-md rounded-3xl shadow-2xl overflow-hidden">
                        {/* Pills Mua / Thu√™ */}
                        <div className="px-6 pt-5">
                            <div className="inline-flex bg-[#eef3fb] rounded-full p-1">
                                <button
                                    onClick={() => setMode("buy")}
                                    className={`px-6 py-2 rounded-full font-semibold transition ${mode === "buy" ? "bg-[#17306b] text-white shadow" : "text-[#17306b]"
                                        }`}
                                >
                                    Mua
                                </button>
                                <button
                                    onClick={() => setMode("rent")}
                                    className={`px-6 py-2 rounded-full font-semibold transition ${mode === "rent" ? "bg-[#17306b] text-white shadow" : "text-[#17306b]"
                                        }`}
                                >
                                    Thu√™
                                </button>
                            </div>
                        </div>

                        {/* H√†ng controls: Ch·ªçn BƒêS + Input + T√¨m ki·∫øm */}
                        <div className="px-6 pb-5 pt-4">
                            <div className="flex flex-col lg:flex-row gap-3">
                                <Button
                                    size="large"
                                    icon={<FilterOutlined />}
                                    className="lg:w-[180px] w-full h-[44px] !rounded-xl !border-none !bg-[#f1f5ff] hover:!bg-[#e8efff] text-[#17306b] font-semibold shadow-sm"
                                    onClick={() => setShowFilter(true)}
                                >
                                    B·ªô l·ªçc
                                </Button>

                                <Input
                                    size="large"
                                    value={query}
                                    onChange={(e) => setQuery(e.target.value)}
                                    placeholder="ƒê·ªãa ch·ªâ, t√™n d·ª± √°n, khu v·ª±c, th·ªùi gian di chuy·ªÉn..."
                                    className="flex-1 h-[44px] !rounded-xl"
                                    onPressEnter={handleSearch}
                                />

                                <Button
                                    type="primary"
                                    size="large"
                                    icon={<SearchOutlined />}
                                    className="h-[44px] !rounded-xl bg-[#17306b] hover:!bg-[#122659] px-6 font-semibold"
                                    onClick={handleSearch}
                                >
                                    T√¨m ki·∫øm
                                </Button>
                            </div>

                            {/* Xu h∆∞·ªõng t√¨m ki·∫øm */}
                            <div className="mt-4">
                                <div className="text-gray-800 font-semibold mb-2">Xu h∆∞·ªõng t√¨m ki·∫øm</div>
                                <div className="flex flex-wrap gap-2">
                                    {trending.map((t) => (
                                        <Tag
                                            key={t}
                                            onClick={() => setQuery(t)}
                                            className="cursor-pointer rounded-full px-3 py-1 bg-[#eef6ff] hover:bg-[#e1efff] border-none text-[#1f5fbf]"
                                        >
                                            <span className="mr-1">üìà</span>
                                            {t}
                                        </Tag>
                                    ))}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <section className="bg-[#f7fafc] pt-12 lg:pt-16 pb-24">
                <div className="max-w-[1440px] mx-auto px-4 md:px-6 lg:px-8">
                    <FeatureTools />
                    <FeaturedList />
                    <BannerCta
                        title="Tra c·ª©u quy ho·∫°ch"
                        description={
                            <>
                                Ki·ªÉm tra quy ho·∫°ch online theo: s·ªë t·ªù, s·ªë th·ª≠a, t·ªça ƒë·ªô‚Ä¶ v·ªõi ƒë·ªô ch√≠nh
                                x√°c cao v√† d·ªØ li·ªáu m·ªõi nh·∫•t.
                            </>
                        }
                        buttonLabel="Kh√°m ph√° ngay"
                        href="/tra-cuu-quy-hoach"
                        bg={bannerPlanning}    // ho·∫∑c "/assets/home-section4-image-bg.png"
                        side="right"
                        tone="light"
                        minH={300}
                    />
                    <FeaturedProjects />
                    <FirstTimeBuyerGuide />
                    <BannerCta
                        title="Tra c·ª©u k·∫ø ho·∫°ch"
                        description={
                            <>
                                Ki·ªÉm tra quy ho·∫°ch online theo: s·ªë t·ªù, s·ªë th·ª≠a, to·∫° ƒë·ªô... v·ªõi ƒë·ªô ch√≠nh x√°c cao v√† d·ªØ li·ªáu m·ªõi nh·∫•t
                            </>
                        }
                        buttonLabel="Kh√°m ph√° ngay"
                        href="/dang-tin"
                        bg={bannerResearch}     // ho·∫∑c "/assets/home-section5-image-bg.png"
                        side="left"
                        tone="dark"
                        minH={320}
                    />
                    <BannerCta
                        title="ƒêƒÉng tin chuy√™n nghi·ªáp
"
                        description={
                            <>
                                Mu·ªën t√¨m kh√°ch h√†ng ch·∫•t l∆∞·ª£ng? Kh√°m ph√° gi·∫£i ph√°p ƒëƒÉng tin to√†n di·ªán t·∫°i Radanhadat.vn v·ªõi c·ª±c nhi·ªÅu ∆∞u ƒë√£i trong giai ƒëo·∫°n ra m·∫Øt n·ªÅn t·∫£ng

                            </>
                        }
                        buttonLabel="ƒêƒÉng tin ngay"
                        href="/dang-tin"
                        bg={bannerPosting}     // ho·∫∑c "/assets/home-section5-image-bg.png"
                        side="right"
                        tone="dark"
                        minH={320}
                    />
                    <BannerCta
                        title="‚ÄúL√†m‚Äù n·ªôi th·∫•t ƒë·∫πp m√™ say"
                        description={
                            <>
                                Gi·∫£m ngay 5% khi l√†m n·ªôi th·∫•t c√πng dg home

                            </>
                        }
                        buttonLabel="Kh√°m ph√° ngay"
                        href="/dang-tin"
                        bg={bannerContact}     // ho·∫∑c "/assets/home-section5-image-bg.png"
                        side="left"
                        tone="dark"
                        minH={320}
                    />


                </div>
            </section>
            <FilterModal
                open={showFilter}
                onClose={() => setShowFilter(false)}
                onApply={handleApplyFilters}
                initial={filters}
            />
        </div>
    );
}
